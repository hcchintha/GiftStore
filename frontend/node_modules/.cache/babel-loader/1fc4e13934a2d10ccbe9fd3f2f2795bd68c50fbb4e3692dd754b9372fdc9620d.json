{"ast":null,"code":"var _jsxFileName = \"/Users/shanmukaganti/Downloads/HariChandana/GiftStore/frontend/src/DataCollect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport Spinner from \"../Spinner\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { useIntersectionObserver } from \"../../hooks/useIntersectionObserver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limit = 9;\nexport default function DataCollect() {\n  _s();\n  const [data, setData] = useState();\n  const [isError, setIsError] = useState(false);\n  const [isInitialFetch, setIsInitialFetch] = useState(false);\n  const pageRef = useRef(1);\n  const [hasMore, setHasMore] = useState(false);\n  const fetchPosts = async ({\n    page,\n    isFetchingFirstTime\n  }) => {\n    try {\n      setIsError(false);\n      isFetchingFirstTime && setIsInitialFetch(true);\n      const resPro = await fetch(`http://localhost:3000/products?limit=${limit}&skip=${(page - 1) * limit}`);\n      const data = await resPro.json();\n      if (data.products) {\n        setData(prev => {\n          const newData = [...prev, ...data.products];\n          if (newData.length < data.total) {\n            setHasMore(true);\n          } else setHasMore(false);\n          return newData;\n        });\n      } else {\n        setHasMore(false);\n      }\n    } catch (err) {\n      setHasMore(false);\n      setIsError(true);\n    } finally {\n      setIsInitialFetch(false);\n    }\n  };\n  useEffect(() => {\n    fetchPosts({\n      page: pageRef.current,\n      isFetchingFirstTime: true\n    });\n  }, []);\n\n  // Infinite scrolling\n  const [targetRef, isIntersecting] = useIntersectionObserver({\n    threshold: 1\n  });\n  useEffect(() => {\n    if (hasMore && isIntersecting) {\n      pageRef.current = pageRef.current + 1;\n      fetchPosts({\n        page: pageRef.current\n      });\n    }\n  }, [isIntersecting, hasMore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: data === null || data === void 0 ? void 0 : data.map(data => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img\",\n            src: data.image,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }, this)]\n        }, data.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }, this), hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: targetRef,\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        text: \"Loading more products...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 17\n  }, this);\n}\n_s(DataCollect, \"OR3arMaJf+nRY1Zkiz6SMdXYLAM=\", false, function () {\n  return [useIntersectionObserver];\n});\n_c = DataCollect;\nvar _c;\n$RefreshReg$(_c, \"DataCollect\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","Spinner","Card","Row","Col","useIntersectionObserver","jsxDEV","_jsxDEV","limit","DataCollect","_s","data","setData","isError","setIsError","isInitialFetch","setIsInitialFetch","pageRef","hasMore","setHasMore","fetchPosts","page","isFetchingFirstTime","resPro","fetch","json","products","prev","newData","length","total","err","current","targetRef","isIntersecting","threshold","className","children","map","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","description","id","ref","text","_c","$RefreshReg$"],"sources":["/Users/shanmukaganti/Downloads/HariChandana/GiftStore/frontend/src/DataCollect.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from \"axios\";\nimport './App.css';\nimport Spinner from \"../Spinner\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Card, Row, Col} from 'react-bootstrap'\nimport { useIntersectionObserver } from \"../../hooks/useIntersectionObserver\";\n\nconst limit = 9;\n\nexport default function DataCollect(){\n\n            const [data, setData] = useState();\n            const [isError, setIsError] = useState(false);\n            const [isInitialFetch, setIsInitialFetch] = useState(false);\n\n            const pageRef = useRef(1);\n            const [hasMore, setHasMore] = useState(false);\n\n            const fetchPosts = async ({ page, isFetchingFirstTime }) => {\n                try {\n                  setIsError(false);\n                  isFetchingFirstTime && setIsInitialFetch(true);\n\n                  const resPro = await fetch(\n                    `http://localhost:3000/products?limit=${limit}&skip=${\n                      (page - 1) * limit\n                    }`\n                  );\n\n            const data = await resPro.json();\n\n            if (data.products) {\n                    setData((prev) => {\n                       const newData = [...prev, ...data.products];\n\n                      if (newData.length < data.total) {\n                        setHasMore(true);\n                      } else setHasMore(false);\n\n                      return newData;\n                    });\n                  } else {\n                    setHasMore(false);\n                  }\n                } catch (err) {\n                  setHasMore(false);\n                  setIsError(true);\n                } finally {\n                  setIsInitialFetch(false);\n                }\n            };\n\n\n            useEffect(() => {\n                fetchPosts({ page: pageRef.current, isFetchingFirstTime: true });\n            }, [])\n\n            // Infinite scrolling\n              const [targetRef, isIntersecting] = useIntersectionObserver({ threshold: 1 });\n\n              useEffect(() => {\n                if (hasMore && isIntersecting) {\n                  pageRef.current = pageRef.current + 1;\n                  fetchPosts({ page: pageRef.current });\n                }\n              }, [isIntersecting, hasMore]);\n\n            return (\n                <div className=\"App\">\n                    {\n                        <div className='products'>\n                            {\n                            data?.map((data) => {\n                                return (\n                                    <div key={data.id}>\n                                        <img className='img'\n                                            src={data.image}\n                                            alt=\"img\" />\n                                        <h1>{data.name}</h1>\n                                        <p>{data.description}</p>\n                                    </div>\n                                );\n                            })\n                            }\n                        </div>\n                    }\n                    {hasMore && (\n                            <div ref={targetRef}>\n                              <Spinner text=\"Loading more products...\" />\n                            </div>\n                          )}\n                </div>\n            );\n        }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}